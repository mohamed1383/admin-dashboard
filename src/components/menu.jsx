import React from 'react'
import { Link } from 'react-router-dom'
import { useState } from 'react'
import '../app.css'
import Header from './header'
import Dashboard from '../pages/dashboard/dashboard'


export default function Menu() {

  const [clickedIcon,setClick] = useState({
    Element: location.pathname == '/' ? '/Dashboard' : location.pathname
  }) 

  const [menuOpen,setOpen] = useState({
    isOpen: false 
  })

  const clickHnadler = (e) => {
     setClick({Element: e.currentTarget.getAttribute('href')})   
  }

  const openMenu = () => {
     menuOpen.isOpen ? setOpen({isOpen: false}) : setOpen({isOpen: true})
  }

  return (
    <div className={!menuOpen.isOpen ? 'menu' : 'menu-style2'} >

       <Dashboard size2={menuOpen.isOpen}></Dashboard>   
       <Header size2={menuOpen.isOpen}></Header>   

       <div className={menuOpen.isOpen && "box"}></div>   

       <svg className='logo' id={menuOpen.isOpen && 'margin'} width="36" height="42" viewBox="0 0 36 42" fill="white" xmlns="http://www.w3.org/2000/svg" onClick={openMenu}>
            <g clipPath="url(#clip0_13070_15697)">
            <path d="M12.3319 42L35.9982 28.3056L35.9612 17.874L34.252 17.9347L34.4539 21.2221L12.3548 34.1082L7.50201 31.2469L24.3522 21.4132L23.4286 20.6591L6.03555 31.0855L5.95508 38.4453L12.3319 42ZM12.9527 34.8623L35.0172 22.011L34.952 27.9311L12.853 40.8173L12.9527 34.8623Z" fill=""/>
            <path d="M35.8743 13.7822L12.2641 0L3.42578 5.4114L6.97823 4.913L29.1156 17.732V23.4132L12.1645 13.573L11.9869 14.7584L29.9676 24.9704L35.9599 21.6818L35.8743 13.7822ZM29.4528 16.8359L7.364 4.02724L12.4583 1.10526L34.5943 13.9243L29.4528 16.8359Z" fill=""/>
            <path d="M6.50903 3.5083L0.00195312 7.31604V34.6636L5.99551 38.4713V36.9128L1.02898 33.9702V8.18114L5.99551 11.1238V31.2251L6.85137 30.719V11.1238L11.8166 8.18114V27.735L12.6738 27.2198L12.7491 7.17659L6.50903 3.5083Z" fill=""/>
            </g>
            <defs>
            <clipPath id="clip0_13070_15697">
            <rect width="36" height="42" fill=""/>
            </clipPath>
            </defs>
       </svg> 

       <Link className={`${clickedIcon.Element === "/Dashboard" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Dashboard" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Dashboard' onClick={(event) => clickHnadler(event)}>

           <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
               <svg className={menuOpen.isOpen && 'icon'} width="22" height="21" viewBox="0 0 22 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                         <path d="M0.5 2.25C0.5 1.65326 0.737053 1.08097 1.15901 0.65901C1.58097 0.237053 2.15326 0 2.75 0H7.25C7.84674 0 8.41903 0.237053 8.84099 0.65901C9.26295 1.08097 9.5 1.65326 9.5 2.25V6.75C9.5 7.34674 9.26295 7.91903 8.84099 8.34099C8.41903 8.76295 7.84674 9 7.25 9H2.75C2.15326 9 1.58097 8.76295 1.15901 8.34099C0.737053 7.91903 0.5 7.34674 0.5 6.75V2.25ZM12.5 2.25C12.5 1.65326 12.7371 1.08097 13.159 0.65901C13.581 0.237053 14.1533 0 14.75 0H19.25C19.8467 0 20.419 0.237053 20.841 0.65901C21.2629 1.08097 21.5 1.65326 21.5 2.25V6.75C21.5 7.34674 21.2629 7.91903 20.841 8.34099C20.419 8.76295 19.8467 9 19.25 9H14.75C14.1533 9 13.581 8.76295 13.159 8.34099C12.7371 7.91903 12.5 7.34674 12.5 6.75V2.25ZM0.5 14.25C0.5 13.6533 0.737053 13.081 1.15901 12.659C1.58097 12.2371 2.15326 12 2.75 12H7.25C7.84674 12 8.41903 12.2371 8.84099 12.659C9.26295 13.081 9.5 13.6533 9.5 14.25V18.75C9.5 19.3467 9.26295 19.919 8.84099 20.341C8.41903 20.7629 7.84674 21 7.25 21H2.75C2.15326 21 1.58097 20.7629 1.15901 20.341C0.737053 19.919 0.5 19.3467 0.5 18.75V14.25ZM12.5 14.25C12.5 13.6533 12.7371 13.081 13.159 12.659C13.581 12.2371 14.1533 12 14.75 12H19.25C19.8467 12 20.419 12.2371 20.841 12.659C21.2629 13.081 21.5 13.6533 21.5 14.25V18.75C21.5 19.3467 21.2629 19.919 20.841 20.341C20.419 20.7629 19.8467 21 19.25 21H14.75C14.1533 21 13.581 20.7629 13.159 20.341C12.7371 19.919 12.5 19.3467 12.5 18.75V14.25Z" fill="white"/>
               </svg>
               {menuOpen.isOpen && <span className="icon-title">Dashboard</span>}
           </div>
       
       </Link>

      <Link className={`${clickedIcon.Element === "/Charts" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Charts" ? 'selected-option' : ''}`} 
      id={menuOpen.isOpen && 'opened-menu-item'} to='Charts' onClick={(event) => clickHnadler(event)}>
          <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
               <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
               <g clipPath="url(#clip0_13070_14871)">
               <path d="M12 0.5C8.8174 0.5 5.76515 1.76428 3.51472 4.01472C1.26428 6.26515 0 9.3174 0 12.5C0 15.6826 1.26428 18.7348 3.51472 20.9853C5.76515 23.2357 8.8174 24.5 12 24.5C15.1826 24.5 18.2348 23.2357 20.4853 20.9853C22.7357 18.7348 24 15.6826 24 12.5C24 9.3174 22.7357 6.26515 20.4853 4.01472C18.2348 1.76428 15.1826 0.5 12 0.5V0.5ZM11.208 5.807C13.4 5.782 15.574 6.941 16.638 9.111C17.547 10.963 17.516 12.721 16.54 14.756C16.063 15.751 16.053 15.816 16.299 16.334C16.513 16.786 17.026 17.113 17.52 17.113C17.974 17.113 18.67 16.527 18.772 16.059C18.872 15.605 18.579 14.941 18.165 14.682C18.032 14.6 17.901 14.515 17.772 14.427C17.643 14.327 18.192 14.047 18.513 14.047C19.2 14.047 19.76 14.573 19.888 15.337C19.943 15.67 20.022 15.759 20.328 15.839C21.187 16.061 21.625 17.29 21.083 17.955C20.863 18.225 20.853 18.226 20.778 17.997C20.511 17.196 20.112 16.877 19.375 16.877C19.056 16.877 18.803 17.005 18.277 17.433C17.271 18.253 16.411 18.736 15.37 19.065C14.094 19.449 12.618 19.543 11.284 19.221C9.122 18.79 7.052 17.111 6.032 14.964C4.758 12.282 5.135 9.5 7.033 7.577C7.57857 7.02225 8.22808 6.5804 8.94443 6.2767C9.66079 5.973 10.43 5.8134 11.208 5.807Z" fill="white"/>
               </g>
               <defs>
               <clipPath id="clip0_13070_14871">
               <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
               </clipPath>
               </defs>
               </svg>
               {menuOpen.isOpen && <span className='icon-title'>Charts</span>}
          </div>
      
      </Link>

      <Link className={`${clickedIcon.Element === "/Message" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Message" ? 'selected-option' : ''}`} 
      id={menuOpen.isOpen && 'opened-menu-item'} to='Message' onClick={(event) => clickHnadler(event)}>
          <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
               <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M21.6635 8.43127C21.1376 7.17625 20.3727 6.03553 19.4111 5.07268C18.4525 4.10815 17.3138 3.34129 16.0596 2.81565C14.7748 2.27455 13.3943 1.99718 12.0002 2.00002H11.9533C10.5354 2.00705 9.16427 2.2883 7.87286 2.84143C6.62944 3.37246 5.50139 4.14068 4.55177 5.10315C3.59958 6.06384 2.84335 7.20057 2.32521 8.45002C1.78735 9.74931 1.51482 11.1431 1.52365 12.5492C1.53068 14.1758 1.91974 15.7906 2.6463 17.2344V20.7969C2.6463 21.3922 3.12911 21.875 3.72208 21.875H7.2799C8.73038 22.6069 10.331 22.9921 11.9557 23H12.0049C13.4065 23 14.7635 22.7281 16.0432 22.1961C17.291 21.6767 18.4255 20.9188 19.383 19.9649C20.3486 19.0063 21.108 17.886 21.6401 16.6367C22.1908 15.343 22.4721 13.9672 22.4791 12.5469C22.4838 11.1196 22.2072 9.7344 21.6635 8.43127ZM7.32208 13.625C6.70333 13.625 6.19943 13.1211 6.19943 12.5C6.19943 11.8789 6.70333 11.375 7.32208 11.375C7.94083 11.375 8.44474 11.8789 8.44474 12.5C8.44474 13.1211 7.94318 13.625 7.32208 13.625ZM12.0002 13.625C11.3815 13.625 10.8776 13.1211 10.8776 12.5C10.8776 11.8789 11.3815 11.375 12.0002 11.375C12.619 11.375 13.1229 11.8789 13.1229 12.5C13.1229 13.1211 12.619 13.625 12.0002 13.625ZM16.6783 13.625C16.0596 13.625 15.5557 13.1211 15.5557 12.5C15.5557 11.8789 16.0596 11.375 16.6783 11.375C17.2971 11.375 17.801 11.8789 17.801 12.5C17.801 13.1211 17.2971 13.625 16.6783 13.625Z" fill="white"/>
               </svg>
               {menuOpen.isOpen && <span className='icon-title'>Message</span>}
          </div>
      
      </Link>
 
       <Link className={`${clickedIcon.Element === "/Calendar" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Calendar" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Calendar' onClick={(event) => clickHnadler(event)}>
          <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
            <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M2.625 21.125C2.625 21.5398 2.96016 21.875 3.375 21.875H20.625C21.0398 21.875 21.375 21.5398 21.375 21.125V11.2812H2.625V21.125ZM20.625 4.8125H16.6875V3.3125C16.6875 3.20937 16.6031 3.125 16.5 3.125H15.1875C15.0844 3.125 15 3.20937 15 3.3125V4.8125H9V3.3125C9 3.20937 8.91563 3.125 8.8125 3.125H7.5C7.39687 3.125 7.3125 3.20937 7.3125 3.3125V4.8125H3.375C2.96016 4.8125 2.625 5.14766 2.625 5.5625V9.6875H21.375V5.5625C21.375 5.14766 21.0398 4.8125 20.625 4.8125Z" fill="white"/>
            </svg>
            {menuOpen.isOpen && <span className='icon-title'>Calendar</span>}
          </div>
       
       </Link>

       <Link className={`${clickedIcon.Element === "/Widgets" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Widgets" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Widgets' onClick={(event) => clickHnadler(event)}>
          <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
                           <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_13078_12401)">
                    <path d="M2 4.5005C2 2.291 6.4775 0.5 12.0005 0.5C17.5235 0.5 22.001 2.291 22.001 4.5005V6.5C22.001 8.7095 17.5235 10.5005 12.0005 10.5005C6.4775 10.5005 2 8.7095 2 6.5V4.5005Z" fill="white"/>
                    <path d="M2 10.001V14.501C2 16.7075 6.4775 18.5 12.0005 18.5C17.5235 18.5 22.001 16.709 22.001 14.4995V10.001C21.3255 10.4876 20.5905 10.8858 19.814 11.186C17.7155 12.026 14.951 12.5 12.0005 12.5C9.0515 12.5 6.287 12.0245 4.1885 11.186C3.41195 10.8858 2.67699 10.4876 2.0015 10.001H2Z" fill="white"/>
                    <path d="M22.001 18.002C21.3254 18.4881 20.5905 18.8858 19.814 19.1855C17.714 20.0255 14.951 20.4995 11.999 20.4995C9.05 20.4995 6.2855 20.0255 4.187 19.1855C3.41047 18.8853 2.67551 18.4871 2 18.0005V20.4995C2 22.709 6.4775 24.5 12.0005 24.5C17.5235 24.5 22.001 22.709 22.001 20.4995V18.002Z" fill="white"/>
                    </g>
                    <defs>
                    <clipPath id="clip0_13078_12401">
                    <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
                    </clipPath>
                    </defs>
            </svg>
            {menuOpen.isOpen && <span className='icon-title'>Widgets</span>}

          </div>
       
       </Link>

       <hr />

       <Link className={`${clickedIcon.Element === "/Settings" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Settings" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Settings' onClick={(event) => clickHnadler(event)}>
            <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
               <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                         <g clipPath="url(#clip0_13078_12405)">
                         <path d="M14.1075 2.075C13.488 -0.025 10.512 -0.025 9.8925 2.075L9.7425 2.585C9.64994 2.89939 9.48818 3.18908 9.26909 3.43282C9.05 3.67656 8.77913 3.86817 8.47634 3.9936C8.17356 4.11902 7.84654 4.17509 7.51927 4.15768C7.192 4.14028 6.87277 4.04984 6.585 3.893L6.12 3.638C4.1955 2.591 2.091 4.6955 3.1395 6.6185L3.393 7.085C4.062 8.315 3.4275 9.8465 2.085 10.2425L1.575 10.3925C-0.525 11.012 -0.525 13.988 1.575 14.6075L2.085 14.7575C2.39939 14.8501 2.68908 15.0118 2.93282 15.2309C3.17656 15.45 3.36817 15.7209 3.4936 16.0237C3.61902 16.3264 3.67509 16.6535 3.65768 16.9807C3.64028 17.308 3.54984 17.6272 3.393 17.915L3.138 18.38C2.091 20.3045 4.1955 22.409 6.1185 21.3605L6.585 21.107C6.87277 20.9502 7.192 20.8597 7.51927 20.8423C7.84654 20.8249 8.17356 20.881 8.47634 21.0064C8.77913 21.1318 9.05 21.3234 9.26909 21.5672C9.48818 21.8109 9.64994 22.1006 9.7425 22.415L9.8925 22.925C10.512 25.025 13.488 25.025 14.1075 22.925L14.2575 22.415C14.3501 22.1006 14.5118 21.8109 14.7309 21.5672C14.95 21.3234 15.2209 21.1318 15.5237 21.0064C15.8264 20.881 16.1535 20.8249 16.4807 20.8423C16.808 20.8597 17.1272 20.9502 17.415 21.107L17.88 21.362C19.8045 22.409 21.909 20.3045 20.8605 18.3815L20.607 17.915C20.4502 17.6272 20.3597 17.308 20.3423 16.9807C20.3249 16.6535 20.381 16.3264 20.5064 16.0237C20.6318 15.7209 20.8234 15.45 21.0672 15.2309C21.3109 15.0118 21.6006 14.8501 21.915 14.7575L22.425 14.6075C24.525 13.988 24.525 11.012 22.425 10.3925L21.915 10.2425C21.6006 10.1499 21.3109 9.98818 21.0672 9.76909C20.8234 9.55 20.6318 9.27913 20.5064 8.97634C20.381 8.67356 20.3249 8.34654 20.3423 8.01927C20.3597 7.692 20.4502 7.37277 20.607 7.085L20.862 6.62C21.909 4.6955 19.8045 2.591 17.8815 3.6395L17.415 3.893C17.1272 4.04984 16.808 4.14028 16.4807 4.15768C16.1535 4.17509 15.8264 4.11902 15.5237 3.9936C15.2209 3.86817 14.95 3.67656 14.7309 3.43282C14.5118 3.18908 14.3501 2.89939 14.2575 2.585L14.1075 2.075ZM12 16.895C10.8344 16.895 9.71649 16.432 8.89227 15.6077C8.06804 14.7835 7.605 13.6656 7.605 12.5C7.605 11.3344 8.06804 10.2165 8.89227 9.39227C9.71649 8.56804 10.8344 8.105 12 8.105C13.1652 8.105 14.2827 8.56789 15.1067 9.39183C15.9306 10.2158 16.3935 11.3333 16.3935 12.4985C16.3935 13.6637 15.9306 14.7812 15.1067 15.6052C14.2827 16.4291 13.1652 16.892 12 16.892V16.895Z" fill="white"/>
                         </g>
                         <defs>
                         <clipPath id="clip0_13078_12405">
                         <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
                         </clipPath>
                         </defs>
                    </svg>    
                    {menuOpen.isOpen && <span className='icon-title'>Settings</span>}
            </div>
       
       </Link>
 
       <Link className={`${clickedIcon.Element === "/Help" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Help" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Help' onClick={(event) => clickHnadler(event)}>
            <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
            <svg className={menuOpen.isOpen && 'icon'} width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clipPath="url(#clip0_13078_12407)">
                    <path d="M24 12.5C24 15.6826 22.7357 18.7348 20.4853 20.9853C18.2348 23.2357 15.1826 24.5 12 24.5C8.8174 24.5 5.76516 23.2357 3.51472 20.9853C1.26428 18.7348 0 15.6826 0 12.5C0 9.3174 1.26428 6.26516 3.51472 4.01472C5.76516 1.76428 8.8174 0.5 12 0.5C15.1826 0.5 18.2348 1.76428 20.4853 4.01472C22.7357 6.26516 24 9.3174 24 12.5ZM8.244 9.5495H9.4815C9.6885 9.5495 9.8535 9.38 9.8805 9.1745C10.0155 8.1905 10.6905 7.4735 11.8935 7.4735C12.9225 7.4735 13.8645 7.988 13.8645 9.2255C13.8645 10.178 13.3035 10.616 12.417 11.282C11.4075 12.0155 10.608 12.872 10.665 14.2625L10.6695 14.588C10.6711 14.6864 10.7113 14.7803 10.7814 14.8493C10.8516 14.9183 10.9461 14.957 11.0445 14.957H12.261C12.3605 14.957 12.4558 14.9175 12.5262 14.8472C12.5965 14.7768 12.636 14.6815 12.636 14.582V14.4245C12.636 13.3475 13.0455 13.034 14.151 12.1955C15.0645 11.501 16.017 10.73 16.017 9.1115C16.017 6.845 14.103 5.75 12.0075 5.75C10.107 5.75 8.025 6.635 7.8825 9.179C7.88045 9.22744 7.88832 9.27579 7.90565 9.32107C7.92297 9.36636 7.94937 9.40762 7.98323 9.44232C8.01709 9.47703 8.05769 9.50444 8.10254 9.52287C8.14738 9.5413 8.19552 9.55036 8.244 9.5495ZM11.7315 19.214C12.6465 19.214 13.275 18.623 13.275 17.8235C13.275 16.9955 12.645 16.4135 11.7315 16.4135C10.8555 16.4135 10.218 16.9955 10.218 17.8235C10.218 18.623 10.8555 19.214 11.733 19.214H11.7315Z" fill="white"/>
                    </g>
                    <defs>
                    <clipPath id="clip0_13078_12407">
                    <rect width="24" height="24" fill="white" transform="translate(0 0.5)"/>
                    </clipPath>
                    </defs>
            </svg>
            {menuOpen.isOpen && <span className='icon-title'>Help</span>}
            </div>
       
       </Link>
 
       <Link className={`${clickedIcon.Element === "/Log Out" && 'clicked'} ${menuOpen.isOpen && clickedIcon.Element === "/Log Out" ? 'selected-option' : ''}`} 
       id={menuOpen.isOpen && 'opened-menu-item'} to='Log Out' onClick={(event) => clickHnadler(event)}>       
          <div className="icon-container" id={!menuOpen.isOpen && 'center-position'}>
               <svg className={menuOpen.isOpen && 'icon'} width="22" height="20" viewBox="0 0 22 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                         <path d="M5 9H13V11H5V14L0 10L5 6V9ZM4 16H6.708C7.86269 17.0183 9.28669 17.6819 10.8091 17.9109C12.3316 18.14 13.8878 17.9249 15.291 17.2915C16.6942 16.6581 17.8849 15.6332 18.7201 14.3398C19.5553 13.0465 19.9995 11.5396 19.9995 10C19.9995 8.46042 19.5553 6.95354 18.7201 5.66019C17.8849 4.36683 16.6942 3.34194 15.291 2.7085C13.8878 2.07506 12.3316 1.85998 10.8091 2.08906C9.28669 2.31815 7.86269 2.98167 6.708 4H4C4.93066 2.75718 6.13833 1.74851 7.52707 1.05414C8.91581 0.359775 10.4473 -0.00116364 12 2.81829e-06C17.523 2.81829e-06 22 4.477 22 10C22 15.523 17.523 20 12 20C10.4473 20.0012 8.91581 19.6402 7.52707 18.9459C6.13833 18.2515 4.93066 17.2428 4 16Z" fill="white"/>
               </svg>
               {menuOpen.isOpen && <span className='icon-title'>Log Out</span>}
          </div>
       
       </Link> 
 

    </div>
  )
}
